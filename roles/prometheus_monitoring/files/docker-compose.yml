services:

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
        - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml # Prometheus server configuration file
        - ./prometheus/alertrules.yml:/etc/prometheus/alertrules.yml # rules on when to raise alerts
        - ./prometheus/targets.json:/etc/prometheus/targets.json     # targets to scrape
        - prometheus_data:/prometheus                                # persistent storage for the TSDB
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'               # path to the Prometheus configuration file
      - '--storage.tsdb.path=/prometheus'                            # path to the directory where to store the TSDB
      - '--storage.tsdb.retention.time=7d'                           # for how long to store data
    networks:
      - monitoring
    restart: unless-stopped                                          # if the container stops, restart it (unless stopped explicitly)
    depends_on:
      - node-exporter                                                # start Prometheus after the Node Exporter    

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro # path to the host's /proc
      - /sys:/host/sys:ro   # path to the host's /sys
      - /:/host/rootfs:ro   # path to the host's /
    command:
      - '--path.sysfs=/host/sys'
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/host/rootfs'
    networks:
      - monitoring
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana # persistent storage for Grafana data (dashboards, users)
    networks:
      - monitoring
    depends_on: 
      - prometheus                    # start Grafana after Prometheus

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alert-manager
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml # Alertmanager configuration file
      - ./slack_url:/etc/alertmanager/slack_url # Slack notification webhook URL
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'    # path to the Alertmanager configuration file
    networks:
      - monitoring
    restart: unless-stopped

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data: # volume for Prometheus data
  grafana_data: # volume for Grafana data
